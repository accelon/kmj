const MN_files=[[1,2],
[3,4],
[5,6],
[7,8],
[9,11],
[12],
[13,14],
[15,16],
[17,19],
[20,26],
[1,2], //mn02
[3,7],
[8,11],
[12,13],
[14,15],
[16],
[17],
[18,19],
[20,21],
[22],
[1,3], //mn03
[4,7],
[8],
[9,11],
[12,13],
[14,19],
[20,22],
[23,24],
[25,26],
[27,28],
[1,2], //mn04
[3,4],
[5,6],
[7],
[8,10],
[11,15],
[16,17],
[18,23],
[24,26],
[27],
[1,2], //mn05
[3,4],
[5,7],
[8,9],
[10,11],
[12,13],
[14],
[15,16],
[17,18],
[19,21],
[1,4], //mn06
[5],
[6,7],
[8,11],
[12],
[13,19],
[20,21],
[22,23],
[24,25],
[26,30],
[1,2], //mn07
[3,4],
[5,6],
[7,8],
[9,12],
[13,16],
[17,18],
[19,20],
[21],
[22,24],
[1], //mn08
[2,3],
[4,5,6],
[7,8],
[9,13],
[14,18],
[19,20,21,22,23,24,25,26,27],
[28,29],
[30,31,32],
[33,34],
[1,2,3],  //mn09
[4,5,6,7,8,9,10],
[11,12,13],
[14,15],
[16,17,18,19,20,21,22,23,24,25],
[26,27,28,29],
[30,21],
[32,33],
[34,35,36],
[37,38,39],
[1,2,3,4,5,6],  //mn10
[7,8,9],
[10,11,12,13],
[14,15,16,17,18],
[19,20,21,22,23],
[24,25,26],
[27,28,29,30],
[31,32,33],
[34,35,36,37],
[38,39,40,41,42],
[1,2,3,4,5,6],  //mn11
[7,8],
[9,10],
[11,12,13],
[14,15,16],
[17,18],
[19,20],
[21,22,23],
[24,25],
[26],
[1],   //mn12
[2,3],
[4,5],
[6,7,8,9,10,11],
[12,13],
[14],
[15,16],
[17,18,19],
[20,21,22],
[23,24],
[1],   //mn13
[2,3,4],
[5,6],
[7],
[8,9,10],
[11,12],
[13,14],
[15,16,17,18],
[19,20,21,22,23,24],
[25,26,27],
[1],            //mn14
[2],
[3,4,5],
[6],
[7,8,9],
[10,11,12],
[13,14,15],
[16,17,18],
[19,20,21],
[22,23,24,25],
[26,27],
[28,29],
[1,2,3],  //prefix mn15
[4,5],
[6,7],
[8,9,10,11,12],
[13],
[14,15,16],
[17],
[18],      //150 continue mn15, not mn16
[19],      //151
[20,21,22]]  //152
import { meta_sc,readTextContent} from 'ptk/nodebundle.cjs'

	
export const filesFolders={
    //need ? for matching folder
    dn1:["dn/dn{1-13}"], 
    dn2:["dn/dn{14-23}"],
    dn3:["dn/dn{24-34}"],
    mn1:["mn/mn{1-5}"], //need a wildcard in 50_? for match whole file
    mn2:["mn/mn{6-10}"],
    mn3:["mn/mn{11-15}"],
    sn1:["sn/sn{1-11}"] ,
    sn2:["sn/sn{12-21}"] ,
    sn3:["sn/sn{22-34}"] ,
    sn4:["sn/sn{35-44}"] ,
    sn5:["sn/sn{45-56}"] ,
    an1:["an/an01?"],an2:["an/an02?"],an3:["an/an03?"],an4:["an/an04?"], an5:["an/an05?"],
    an6:["an/an06?"],an7:["an/an07?"],an8:["an/an08?"],an9:["an/an09?"], an10:["an/an10?"],an11:["an/an11?"],
}

for (let i=1;i<=56;i++) filesFolders['s'+i]=['sn/sn'+i.toString().padStart(2,'0')+'c?'];
for (let i=1;i<=34;i++) filesFolders['d'+i]=['dn/dn'+i.toString().padStart(2,'0')+'c?'];
for (let i=1;i<=152;i++) {
	let prefix=Math.round(i/10)+1;
	if (i>=150)prefix--;// continue mn15
	const [from,to]=MN_files[i-1];
	if (to) {//a range
		filesFolders['m'+i]='mn/mn'+prefix.toString().padStart(2,'0')+'c{'+from+'-'+to+'}';
	} else {//one file
		filesFolders['m'+i]='mn/mn'+prefix.toString().padStart(2,'0')+'c'+from.toString().padStart(2,'0')+'?';
	}
}
for (let i=1;i<=11;i++) filesFolders['a'+i]=['an/an'+i.toString().padStart(2,'0')+'c?'];


export const filesOf=(pat,rootfolder)=>meta_sc.getFilesOfBook(pat,filesFolders,rootfolder);

